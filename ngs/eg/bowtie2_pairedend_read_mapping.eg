#!/bin/bash -x
# This is an example script, meant to be copied and adjust so it can
# work with .../tools/ngs/Makefile. (name must be
# 'do_pairedend_read_mapping')

# The script takes three arguments, the two input files with reads (in fastq  or fastq.gz format) and the
# output file (ending in .sam, not .bam ...)
# Additional arguments can be passed as environment variable extra_mapping_opts, as
# env extra_mapping_opts="--foo bar --this that".
# Note that when this is done in a calling script (such as qrun.sh), you have to
# supply an extra level of quoting. E.g.:
#
# qrun.sh env extra_mapping_opts="'--very-fast --trim5 10'" make exptest.bam
#

pwd

check_isnotempty() { 
    local file=$1; shift
    if [ ! -s $file ]; then
        echo "File '$file' does not exist or is empty"
        exit 1
    fi
}

require_var() { 
# check if given variable(s) is defined. 
# use as 
#   require_var foo bar 
# if $foo and $bar are mandatory
    for var in "$@"; do
      eval "val=\$$var"
      if [ -z "$val"  ]; then
          echo "variable $var is not defined; exiting" >&2
          return 3
      fi
    done
}

require_var genome

check_isnotempty "$genome.1.bt2"

if [ $# -ne 3 ] ;then
    echo "Got args: $@
Usage: $0 reads1.fastq reads2.fastq output.sam" >&2
    exit 4
fi

reads1="$1"
reads2="$2"
sam="$3"

check_isnotempty $reads1
check_isnotempty $reads2

## Example options:
## minins="--minins 80"
## maxins="--maxins 200"
## trim="--trim5 15 --trim3 5 "
## num_aligns="-k 2"
## concordancy="--no-discordant --no-overlap --no-contain"
## opts="$concordancy $minins $maxins $trim --end-to-end --sensitive $num_aligns "

bowtie2 $opts $extra_mapping_opts -x $genome -1 $reads1 -2 $reads2 -S $sam
bowtie_status=$?

if [ ! -s $sam ]; then 
   echo "Resulting .sam file $sam empty, removing it" >&2
   rm $sam
   exit 3
fi 

exit $bowtie_status
