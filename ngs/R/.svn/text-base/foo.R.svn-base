#!/bin/env Rscript

## Based on GC-content.R, after Hebert & Crollius, Genome Biol. 2010.
## See also the kmers.R script. 

## script to determine particular dinucleotide percentage per base-pair
## position, given a fasta file. Arguments are all passed as environment
## variables, invoke as env file=fastafile.fa window=somenumber \
## outdir=somedirectory type=dipurine GC-content.R
## 
## file: fasta file containing one chromosome
## window: length over which to average (11 by default, but could also consider 147, see
##          Chung et al. (Vingron group), PLoS ONE 2010)
## type:  what type of dinucleotide: one of dipurine, diweak, distrong, or
##        any specific dinucleotide (e.g. AA). The reverse complement is always
##        taken as well. 
## indir:  where to find fasta files
## outdir: where to leave results (default: .)

options(verbose=TRUE)

library(Rsamtools)
library(rtracklayer)
library(zoo)

indir <- Sys.getenv("indir")
if (indir=="")
  indir <- "."
### indir <- "/hpc/dbg_gen/philip/seqdata/genomes/sacCer3"  # where to find sequence files


outdir <- Sys.getenv("outdir")
if (outdir=="")
    outdir <- "."
# outdir <- "/hpc/dbg_gen/philip/seqdata/genomes/sacCer3/GC-content"

setwd(indir)

k <- 2                                  #looking at dinucleotides now

is.wanted.dinucleotide <- rep(FALSE, 16)
names(is.wanted.dinucleotide) <- c("AA", "CA", "GA", "TA", "AC", "CC", "GC", "TC", "AG", "CG", 
    "GG", "TG", "AT", "CT", "GT", "TT")

type <- Sys.getenv("type")

if(nchar(type)==2) {
    nucs <- unlist(strsplit(type,split=""))
    stopifnot(all(nucs %in% c("A", "C", "G", "T")))
    library(uuutils)
    is.wanted.dinucleotide[c( type, reverseComplement(type)) ] <- TRUE    
} else {
    # fixed types
    stopifnot(type %in% c("dipurine", "diweak" ,"distrong"))

    if(dipurine)
      is.wanted.dinucleotide[c("AA", "GA", "AG", "GG")] <- TRUE

    if(diweak)
      is.wanted.dinucleotide[c("AA", "AT", "TA", "TT")] <- TRUE

    if(distrong)
      is.wanted.dinucleotide[c("GG", "GC", "CG", "CC")] <- TRUE
}

window <- as.integer(Sys.getenv('window'))
stopifnot(!is.na(window) && window > 0)

file <- Sys.getenv('file')
file <- paste(indir, file, sep="/")
stopifnot(file.exists(file))

fa <- open(FaFile(file))
idx <- scanFaIndex(fa)
dna <- scanFa(fa,param=idx[1])

chr.name <- names(dna)

dna.string <- as.character(dna) # NOTE: vector of length 1

stopifnot(length(dna.string) ==1)

dna.chars <- unlist(strsplit(dna.string, "")) # big vector, each containing one nucleotide

dna.chars <- unname(dna.chars)                       #save memory

n <- length(dna.chars) - k + 1 

m <- sapply(1:k, function(i)dna.chars[(1:n)+i-1])
dinucleotides <-  apply(m, 1, paste, collapse="") # e.g. "AG" "GA" "AT" "TT" "TG" "GC" "CT" "TT" "TT" "TC"

local.dinucleotide.content <- function(s)sum( is.wanted.dinucleotide[ s ] )/length(s)

percent <- 100*rollapply(data=dinucleotides, FUN=local.dinucleotide.content,width=window, fill=NA)
m <- mean(percent, na.rm=TRUE)
percent[ is.na(percent) ] <- m
percent <- c(percent, m)                # so we have a vector of exactly length(chr)
percent <- as.integer(percent+0.5)

len <- length(dna.chars)

gr <- GRanges(ranges=IRanges(start=1:len, width=1), strand='*',
              seqnames=chr.name, score=percent)

export(object=gr, con=file(paste0(outdir, "/", chr.name, ".wig")), format="wig")

## after this,
## chromsizes=/home/gen/philip/hpc/seqdata/genomes/sacCer3/chromSizes.txt
## cat *.wig | wigToBigWig -clip stdin $chromsizes dipurine-71bp.bw
